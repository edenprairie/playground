@page "/showcase.me"

@inject IJSRuntime JsRuntime
@inject IAuthorizationService AuthorizationService
@layout NoNavLayout

<AuthorizeView>
    <Authorized>
        <h1>Show case</h1>
        <ParentComponent AlertText="This is a parameter"></ParentComponent>

        <span id="userSpan"></span>
        <br>
        <span id="adminSpan"></span>
    </Authorized>
    <NotAuthorized>
        Please <a href="Identity/Account/Login">Login</a> First!
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authStateTask { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender) 
    {
        if (firstRender) 
        {
            var authState = await authStateTask;
            var user = authState.User;
            var userName = user.Identity.Name;
            await JsRuntime.InvokeVoidAsync("setElementTextById", "userSpan", $"My name is {userName}");

            var userIsAdmin = await AuthorizationService.AuthorizeAsync(user, "IsAdmin");
            if (userIsAdmin.Succeeded) {
                await JsRuntime.InvokeVoidAsync("setElementTextById", "adminSpan", "I am an Admin");
            }
        }
    }
}
